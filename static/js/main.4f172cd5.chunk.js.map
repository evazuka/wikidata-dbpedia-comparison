{"version":3,"sources":["query-dispatcher.ts","App.tsx","index.tsx"],"names":["SPARQLQueryDispatcher","endpoint","this","sparqlQuery","fullUrl","encodeURIComponent","fetch","headers","then","body","json","Index","props","endpointUrl","queryDispatcher","state","ref","renderD3","result","console","log","results","bindings","data","map","x","id","descendant","value","name","descendantLabel","yob","picture","pic","parent","person","unshift","root","d3","d","parentId","nodeSize","tree","x0","Infinity","x1","each","g","append","attr","node","selectAll","links","join","y","descendants","style","children","text","clone","lower","query","bind","className","width","height","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f172cd5.chunk.js","sourcesContent":["class SPARQLQueryDispatcher {\r\n    endpoint: string;\r\n\r\n    constructor(endpoint: string) {\r\n        this.endpoint = endpoint;\r\n    }\r\n\r\n    query(sparqlQuery: string) {\r\n        const fullUrl = this.endpoint + '?query=' + encodeURIComponent(sparqlQuery);\r\n        const headers = { 'Accept': 'application/sparql-results+json' };\r\n        return fetch(fullUrl, { headers }).then(body => body.json());\r\n    }\r\n}\r\n\r\nexport default SPARQLQueryDispatcher","import React from 'react'\r\nimport './index.css'\r\nimport * as d3 from \"d3\"\r\nimport SPARQLQueryDispatcher from './query-dispatcher'\r\n//import { data } from \"./data\"\r\n\r\ntype Props = {\r\n    endpoint: string\r\n    sparqlQuery: string\r\n}\r\n\r\n\r\nconst tree = data => {\r\n    const root = d3.stratify()\r\n        .id(function (d: any) { return d.id; })\r\n        .parentId(function (d: any) { return d.parent; })\r\n        (data);\r\n    return d3.tree().nodeSize([50, 150])(root);\r\n}\r\n\r\nclass Index extends React.Component {\r\n    endpointUrl = 'https://query.wikidata.org/sparql';\r\n    sparqlQuery = `SELECT DISTINCT ?person ?personLabel ?yob ?yod ?descendant ?descendantLabel ?pic WHERE {\r\n        wd:Q9682 wdt:P40* ?person .\r\n        ?person wdt:P40 ?descendant .\r\n        ?descendant wdt:P569 ?dob .\r\n  OPTIONAL { ?descendant wdt:P18 ?picture . }\r\n  OPTIONAL {?person wdt:P570 ?dod . }\r\n  BIND(YEAR(?dob) as ?yob) .\r\n  BIND(YEAR(?dod) as ?yod) .\r\n  BIND(COALESCE(?picture, \"\") as ?pic) .\r\n        SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\r\n      }`;\r\n    queryDispatcher = new SPARQLQueryDispatcher(this.endpointUrl);\r\n    state: any;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = null;\r\n        this.queryDispatcher.query(this.sparqlQuery).then(this.renderD3.bind(this));\r\n    }\r\n\r\n    ref!: SVGSVGElement\r\n\r\n    renderD3 = (result) => {\r\n        console.log(result.results.bindings);\r\n        const data = result.results.bindings\r\n            .map((x: any) => ({ id: x.descendant.value, name: x.descendantLabel.value, yob: x.yob.value, picture: x.pic.value, parent: x.person.value }));\r\n        data.unshift({ id: \"http://www.wikidata.org/entity/Q9682\", name: \"Elizabeth II\", parent: \"\" })\r\n        console.log(data);\r\n        const root = tree(data);\r\n\r\n        let x0 = Infinity;\r\n        let x1 = -x0;\r\n        root.each(d => {\r\n            if (d.x > x1) x1 = d.x;\r\n            if (d.x < x0) x0 = d.x;\r\n        });\r\n\r\n        const svg = d3.select(this.ref);\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", 10)\r\n            .attr(\"transform\", `translate(${100 / 3},${100 - x0})`);\r\n\r\n        const link = g.append(\"g\")\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"#555\")\r\n            .attr(\"stroke-opacity\", 0.4)\r\n            .attr(\"stroke-width\", 1.5)\r\n            .selectAll(\"path\")\r\n            .data(root.links())\r\n            .join(\"path\")\r\n            .attr(\"d\", d3.linkHorizontal()\r\n                .x((d: any) => d.y)\r\n                .y((d: any) => d.x) as any);\r\n\r\n        const node = g.append(\"g\")\r\n            .attr(\"stroke-linejoin\", \"round\")\r\n            .attr(\"stroke-width\", 3)\r\n            .selectAll(\"g\")\r\n            .data(root.descendants())\r\n            .join(\"g\")\r\n            .attr(\"transform\", d => `translate(${d.y},${d.x})`);\r\n\r\n        node.append(\"svg:circle\")\r\n            .attr(\"r\", 20);\r\n\r\n        node.append(\"svg:image\")\r\n            .attr(\"class\", \"circle\")\r\n            .attr(\"xlink:href\", function (d: any) { return d.data.picture; })\r\n            .attr(\"x\", function (d) { return -25; })\r\n            .attr(\"y\", function (d) { return -25; })\r\n            .attr(\"height\", 50)\r\n            .attr(\"width\", 50)\r\n            .style(\"fill\", function (d: any) { return d.data.picture; })\r\n\r\n        node.append(\"text\")\r\n            .attr(\"dy\", \"0.31em\")\r\n            .attr(\"x\", d => d.children ? -6 : 6)\r\n            .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\r\n            .text((d: any) => d.data.name)\r\n            .clone(true).lower()\r\n            .attr(\"stroke\", \"white\");\r\n\r\n        node.append(\"text\")\r\n            .attr(\"dy\", \"1.3em\")\r\n            .attr(\"x\", d => d.children ? -6 : 6)\r\n            .attr(\"text-anchor\", d => d.children ? \"end\" : \"start\")\r\n            .text((d: any) => d.data.yob)\r\n            .clone(true).lower()\r\n            .attr(\"stroke\", \"white\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <svg className=\"container\" ref={(ref: SVGSVGElement) => this.ref = ref} width={800} height={1000}>\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index","import ReactDOM from 'react-dom'\r\nimport Index from './App';\r\nimport React from 'react';\r\n\r\nReactDOM.render(\r\n    <Index />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}